// <auto-generated />
using System;
using CrossplatformHW.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorShop.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlazorShop.Server.Data.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d5b05c2-61f2-43f1-85c9-fad602cd7dcd"),
                            Name = "Books",
                            Slug = "books"
                        },
                        new
                        {
                            Id = new Guid("4bbd0af1-4218-4f6f-8fc3-f965f4e29e47"),
                            Name = "Movies",
                            Slug = "movies"
                        },
                        new
                        {
                            Id = new Guid("3fbe47e2-7ae0-481f-a70c-de9b43467935"),
                            Name = "Video Games",
                            Slug = "video-games"
                        });
                });

            modelBuilder.Entity("BlazorShop.Server.Data.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("BlazorShop.Server.Data.Entities.Joints.RolePermission", b =>
                {
                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("PermissionId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            PermissionId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            PermissionId = 1,
                            RoleId = 2
                        },
                        new
                        {
                            PermissionId = 2,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("BlazorShop.Server.Data.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "CustomerPermission"
                        },
                        new
                        {
                            Id = 2,
                            Name = "AdminPermission"
                        });
                });

            modelBuilder.Entity("BlazorShop.Server.Data.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("40f97688-236d-4012-9914-a531f461e24a"),
                            CategoryId = new Guid("8d5b05c2-61f2-43f1-85c9-fad602cd7dcd"),
                            Description = "A novel about a woman's journey through the Dust Bowl era of the 1930s",
                            ImageUrl = "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1594925043i/53138081.jpg",
                            Name = "The Four Winds",
                            Price = 25.99m,
                            Slug = "the-four-winds"
                        },
                        new
                        {
                            Id = new Guid("2565207c-fc12-4f42-955a-de5c4db864b3"),
                            CategoryId = new Guid("8d5b05c2-61f2-43f1-85c9-fad602cd7dcd"),
                            Description = "A novel about a woman who finds herself in a library between life and death, with the opportunity to try out different versions of her life",
                            ImageUrl = "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1602190253i/52578297.jpg",
                            Name = "The Midnight Library",
                            Price = 21.99m,
                            Slug = "the-midnight-library"
                        },
                        new
                        {
                            Id = new Guid("25d700a4-bd2a-4796-9635-9ba3c4f99638"),
                            CategoryId = new Guid("8d5b05c2-61f2-43f1-85c9-fad602cd7dcd"),
                            Description = "A novel about a robot who observes the world and learns about human behavior",
                            ImageUrl = "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1603206535i/54120408.jpg",
                            Name = "Klara and the Sun",
                            Price = 27.99m,
                            Slug = "klara-and-the-sun"
                        },
                        new
                        {
                            Id = new Guid("14d5ce23-0430-456d-a2c1-76fff83310db"),
                            CategoryId = new Guid("8d5b05c2-61f2-43f1-85c9-fad602cd7dcd"),
                            Description = "A novel about a man on a solo mission to save the world from extinction",
                            ImageUrl = "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1597695864i/54493401.jpg",
                            Name = "Project Hail Mary",
                            Price = 24.99m,
                            Slug = "project-hail-mary"
                        },
                        new
                        {
                            Id = new Guid("885a2b5b-bf5e-4aaf-a111-b9115bc32f53"),
                            CategoryId = new Guid("8d5b05c2-61f2-43f1-85c9-fad602cd7dcd"),
                            Description = "A thriller about a detective investigating a murder at an isolated hotel in the Swiss Alps",
                            ImageUrl = "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1612344489i/56935099.jpg",
                            Name = "The Sanatorium",
                            Price = 19.99m,
                            Slug = "the-sanatorium"
                        },
                        new
                        {
                            Id = new Guid("6f298842-6153-42fb-99a9-83bac1234c35"),
                            CategoryId = new Guid("8d5b05c2-61f2-43f1-85c9-fad602cd7dcd"),
                            Description = "A novel about a mother's intense desire for perfection and the consequences of her actions",
                            ImageUrl = "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1609854219i/52476830.jpg",
                            Name = "The Push",
                            Price = 20.99m,
                            Slug = "the-push"
                        },
                        new
                        {
                            Id = new Guid("e2ae8851-cd29-4073-b41d-4be31488ff8e"),
                            CategoryId = new Guid("8d5b05c2-61f2-43f1-85c9-fad602cd7dcd"),
                            Description = "A non-fiction book about the woman who helped develop CRISPR gene-editing technology",
                            ImageUrl = "https://m.media-amazon.com/images/I/41an9tLSfBL._SX327_BO1,204,203,200_.jpg",
                            Name = "The Code Breaker",
                            Price = 28.99m,
                            Slug = "the-code-breaker"
                        },
                        new
                        {
                            Id = new Guid("f2d3ec4b-0c96-4b0b-b6e8-8d6158969534"),
                            CategoryId = new Guid("8d5b05c2-61f2-43f1-85c9-fad602cd7dcd"),
                            Description = "A memoir about a woman's relationship with her Korean mother and the grieving process after her mother's death",
                            ImageUrl = "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1601937850i/54814676.jpg",
                            Name = "Crying in H Mart",
                            Price = 22.99m,
                            Slug = "crying-in-h-mart"
                        },
                        new
                        {
                            Id = new Guid("6f036b08-19c1-45e5-a5d4-79717698f3ad"),
                            CategoryId = new Guid("8d5b05c2-61f2-43f1-85c9-fad602cd7dcd"),
                            Description = "A novel about the intersection of the digital and real worlds",
                            ImageUrl = "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1601474686i/53733106.jpg",
                            Name = "No One Is Talking About This",
                            Price = 23.99m,
                            Slug = "no-one-is-talking-about-this"
                        },
                        new
                        {
                            Id = new Guid("2666a2c1-2913-437d-89d9-27b1bcaf1eee"),
                            CategoryId = new Guid("8d5b05c2-61f2-43f1-85c9-fad602cd7dcd"),
                            Description = "A non-fiction book about the Sackler family and their role in the opioid crisis",
                            ImageUrl = "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1611952534i/43868109.jpg",
                            Name = "Empire of Pain",
                            Price = 26.99m,
                            Slug = "empire-of-pain"
                        },
                        new
                        {
                            Id = new Guid("54fd0d47-da90-4997-9ccc-bbe032c584aa"),
                            CategoryId = new Guid("4bbd0af1-4218-4f6f-8fc3-f965f4e29e47"),
                            Description = "A drama film about a woman who embarks on a journey through the American West after the economic collapse of a company town",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/en/a/a5/Nomadland_poster.jpeg",
                            Name = "Nomadland",
                            Price = 14.99m,
                            Slug = "nomadland"
                        },
                        new
                        {
                            Id = new Guid("bc32d054-4cfa-452c-8c0e-8302c9954610"),
                            CategoryId = new Guid("4bbd0af1-4218-4f6f-8fc3-f965f4e29e47"),
                            Description = "A drama film about a Korean American family who moves to Arkansas in search of the American Dream",
                            ImageUrl = "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRO2Ubq5Jw9K26Yf2FIs5Hn4qAmBw9iN5f33KXfOS9-7SrDji-a",
                            Name = "Minari",
                            Price = 14.99m,
                            Slug = "minari"
                        },
                        new
                        {
                            Id = new Guid("67b9188d-be85-44c6-b5e4-540bf214f9fd"),
                            CategoryId = new Guid("4bbd0af1-4218-4f6f-8fc3-f965f4e29e47"),
                            Description = "A historical legal drama film about the trial of seven defendants charged with conspiracy and inciting riots at the 1968 Democratic National Convention in Chicago",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQpYXw7g_VNc6BgTpeO_teA9iFcaz56RNKE4yke-CfHLulmC4mC",
                            Name = "The Trial of the Chicago 7",
                            Price = 14.99m,
                            Slug = "the-trial-of-the-chicago-7"
                        },
                        new
                        {
                            Id = new Guid("5815f23b-2633-4fbe-aa47-50df5affef25"),
                            CategoryId = new Guid("4bbd0af1-4218-4f6f-8fc3-f965f4e29e47"),
                            Description = "A drama film about a recording session with Ma Rainey and her band in 1920s Chicago",
                            ImageUrl = "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQbwaPsGL1aZVMgWOFxy3vTTEKm-Mdsqr4g5ZH_EOVLTXqVKOEU",
                            Name = "Ma Rainey's Black Bottom",
                            Price = 14.99m,
                            Slug = "ma-raineys-black-bottom"
                        },
                        new
                        {
                            Id = new Guid("daee071e-df7d-4130-9b58-d8814ae8fc16"),
                            CategoryId = new Guid("4bbd0af1-4218-4f6f-8fc3-f965f4e29e47"),
                            Description = "A thriller film about a woman seeking revenge against those who wronged her best friend",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRt0E2TEuop7cpx_XAPCUh0iWdoPBqk4ykJKCpfNGFwlwIf-yTx",
                            Name = "Promising Young Woman",
                            Price = 14.99m,
                            Slug = "promising-young-woman"
                        },
                        new
                        {
                            Id = new Guid("5ea5e9d2-ccf6-47c9-be49-37d0c132898b"),
                            CategoryId = new Guid("4bbd0af1-4218-4f6f-8fc3-f965f4e29e47"),
                            Description = "A drama film about a heavy metal drummer who begins to lose his hearing",
                            ImageUrl = "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRBan44FQYlb0XJ-54n54uUojA9QxH7s6lhppT9mSsLOGRcSnai",
                            Name = "Sound of Metal",
                            Price = 14.99m,
                            Slug = "sound-of-metal"
                        },
                        new
                        {
                            Id = new Guid("938de6d4-059f-49ad-b858-5770604dc789"),
                            CategoryId = new Guid("4bbd0af1-4218-4f6f-8fc3-f965f4e29e47"),
                            Description = "A drama film about a man with dementia and his daughter's struggles to care for him",
                            ImageUrl = "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcRY6PkexuVznH6FEgo0by3HRofrGLE9cK6MoC2SiyZHponQb3oY",
                            Name = "The Father",
                            Price = 14.99m,
                            Slug = "the-father"
                        },
                        new
                        {
                            Id = new Guid("add59d50-d5f5-44e6-8e9a-b9cd6baeae6c"),
                            CategoryId = new Guid("4bbd0af1-4218-4f6f-8fc3-f965f4e29e47"),
                            Description = "An animated film about a middle school music teacher who dreams of being a jazz musician",
                            ImageUrl = "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcSWzrHSIZFXCrHAgxd2omcvTVB5jqPkmCVemT0XYPj-CWgRoMs_",
                            Name = "Soul",
                            Price = 14.99m,
                            Slug = "soul"
                        },
                        new
                        {
                            Id = new Guid("56a8bf13-5700-4d23-8f86-8722dec7fd30"),
                            CategoryId = new Guid("4bbd0af1-4218-4f6f-8fc3-f965f4e29e47"),
                            Description = "A war drama film about a group of Vietnam War veterans who return to the country in search of treasure and their fallen squad leader's remains",
                            ImageUrl = "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQ6Y8U3gK1QlfBmjVh_mx9-Ll_YzI3d6K2DQIMQQkUxLuew5K7N",
                            Name = "Da 5 Bloods",
                            Price = 14.99m,
                            Slug = "da-5-bloods"
                        },
                        new
                        {
                            Id = new Guid("e88cf2d1-3fdf-4c72-a293-87a829e62d82"),
                            CategoryId = new Guid("4bbd0af1-4218-4f6f-8fc3-f965f4e29e47"),
                            Description = "A science fiction action film about a secret agent who must prevent World War III through time inversion",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR4o4eBZdZWCR0iNFjiu1p4BKAIwIOkm_tZr3A-WUu4IAAcrq57",
                            Name = "Tenet",
                            Price = 14.99m,
                            Slug = "tenet"
                        },
                        new
                        {
                            Id = new Guid("a473f956-5c61-4caf-8222-0e06d7a555d3"),
                            CategoryId = new Guid("3fbe47e2-7ae0-481f-a70c-de9b43467935"),
                            Description = "An open-world action-adventure game set in a post-apocalyptic Hyrule",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/en/c/c6/The_Legend_of_Zelda_Breath_of_the_Wild.jpg",
                            Name = "The Legend of Zelda: Breath of the Wild",
                            Price = 59.99m,
                            Slug = "the-legend-of-zelda-breath-of-the-wild"
                        },
                        new
                        {
                            Id = new Guid("14d50e9f-4efa-4a0f-b382-f27bf40c1c35"),
                            CategoryId = new Guid("3fbe47e2-7ae0-481f-a70c-de9b43467935"),
                            Description = "An action game set in a post-apocalyptic world where the player must deliver supplies and build connections between isolated cities",
                            ImageUrl = "https://cdn1.epicgames.com/offer/0a9e3c5ab6684506bd624a849ca0cf39/EGS_DeathStrandingDirectorsCut_KOJIMAPRODUCTIONS_S4_1200x1600-5f99e16507795f9b497716b470cfd876",
                            Name = "Death Stranding",
                            Price = 49.99m,
                            Slug = "death-stranding"
                        },
                        new
                        {
                            Id = new Guid("629eff2c-5d7b-4bbe-882b-6c771c34c2ce"),
                            CategoryId = new Guid("3fbe47e2-7ae0-481f-a70c-de9b43467935"),
                            Description = "A survival horror game set in a post-apocalyptic United States where the player must navigate through dangerous environments and fight off infected creatures and hostile human factions",
                            ImageUrl = "https://image.api.playstation.com/vulcan/img/rnd/202010/2618/w48z6bzefZPrRcJHc7L8SO66.png",
                            Name = "The Last of Us Part II",
                            Price = 59.99m,
                            Slug = "the-last-of-us-part-ii"
                        },
                        new
                        {
                            Id = new Guid("d349df35-bcb5-4d5c-b89d-ab88526cf76c"),
                            CategoryId = new Guid("3fbe47e2-7ae0-481f-a70c-de9b43467935"),
                            Description = "An action-adventure game set in 13th century Japan where the player takes on the role of a samurai warrior fighting against invading Mongol forces",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/en/b/b6/Ghost_of_Tsushima.jpg",
                            Name = "Ghost of Tsushima",
                            Price = 49.99m,
                            Slug = "ghost-of-tsushima"
                        },
                        new
                        {
                            Id = new Guid("31d0b276-db72-407d-b85a-640546209629"),
                            CategoryId = new Guid("3fbe47e2-7ae0-481f-a70c-de9b43467935"),
                            Description = "A roguelike action game where the player takes on the role of Prince Zagreus attempting to escape from the underworld",
                            ImageUrl = "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/71FjVhf-SlL._AC_UF894,1000_QL80_.jpghttps://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/71FjVhf-SlL._AC_UF894,1000_QL80_.jpg",
                            Name = "Hades",
                            Price = 24.99m,
                            Slug = "hades"
                        },
                        new
                        {
                            Id = new Guid("08c89497-8ba9-4a34-94b2-64e4122071e5"),
                            CategoryId = new Guid("3fbe47e2-7ae0-481f-a70c-de9b43467935"),
                            Description = "A life simulation game where the player moves to a deserted island and builds a community with anthropomorphic animals",
                            ImageUrl = "https://animal-crossing.com/new-horizons/assets/img/share-tw.jpg",
                            Name = "Animal Crossing: New Horizons",
                            Price = 59.99m,
                            Slug = "animal-crossing-new-horizons"
                        },
                        new
                        {
                            Id = new Guid("83a3d527-a65b-42ca-8152-14165dd93ae3"),
                            CategoryId = new Guid("3fbe47e2-7ae0-481f-a70c-de9b43467935"),
                            Description = "A first-person shooter game where the player takes on the role of the Doom Slayer and battles demons from hell",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/en/9/9d/Cover_Art_of_Doom_Eternal.png",
                            Name = "Doom Eternal",
                            Price = 59.99m,
                            Slug = "doom-eternal"
                        },
                        new
                        {
                            Id = new Guid("c28ba653-0afb-44ce-b33f-5c1373371286"),
                            CategoryId = new Guid("3fbe47e2-7ae0-481f-a70c-de9b43467935"),
                            Description = "A battle royale party game where the player competes with up to 60 players in various obstacle courses",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/en/thumb/5/5e/Fall_Guys_cover.jpg/220px-Fall_Guys_cover.jpg",
                            Name = "Fall Guys: Ultimate Knockout",
                            Price = 19.99m,
                            Slug = "fall-guys-ultimate-knockout"
                        },
                        new
                        {
                            Id = new Guid("f6dd5d7a-fd43-4c90-a3d8-97fb6b09f3a4"),
                            CategoryId = new Guid("3fbe47e2-7ae0-481f-a70c-de9b43467935"),
                            Description = "An action-adventure game where the player takes on the role of Miles Morales as he becomes the new Spider-Man and fights crime in New York City",
                            ImageUrl = "https://image.api.playstation.com/vulcan/ap/rnd/202008/1020/T45iRN1bhiWcJUzST6UFGBvO.png",
                            Name = "Marvel's Spider-Man: Miles Morales",
                            Price = 49.99m,
                            Slug = "spider-man-miles-morales"
                        },
                        new
                        {
                            Id = new Guid("0fd90cbc-d9c6-4374-a211-53609d5f8010"),
                            CategoryId = new Guid("3fbe47e2-7ae0-481f-a70c-de9b43467935"),
                            Description = "An open-world role-playing game set in a dystopian future where the player takes on the role of a mercenary navigating through the criminal underworld of Night City",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/en/thumb/9/9f/Cyberpunk_2077_box_art.jpg/220px-Cyberpunk_2077_box_art.jpg",
                            Name = "Cyberpunk 2077",
                            Price = 59.99m,
                            Slug = "cyberpunk-2077"
                        });
                });

            modelBuilder.Entity("BlazorShop.Server.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Customer"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("BlazorShop.Server.Data.Entities.Security", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ConfirmationCodeExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConfirmationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ConfirmationTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewEmailConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Securities");
                });

            modelBuilder.Entity("BlazorShop.Server.Data.Entities.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("BlazorShop.Server.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTfaEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BlazorShop.Server.Data.Entities.Comment", b =>
                {
                    b.HasOne("BlazorShop.Server.Data.Entities.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorShop.Server.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorShop.Server.Data.Entities.Joints.RolePermission", b =>
                {
                    b.HasOne("BlazorShop.Server.Data.Entities.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorShop.Server.Data.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorShop.Server.Data.Entities.Product", b =>
                {
                    b.HasOne("BlazorShop.Server.Data.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BlazorShop.Server.Data.Entities.Security", b =>
                {
                    b.HasOne("BlazorShop.Server.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorShop.Server.Data.Entities.Session", b =>
                {
                    b.HasOne("BlazorShop.Server.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorShop.Server.Data.Entities.User", b =>
                {
                    b.HasOne("BlazorShop.Server.Data.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BlazorShop.Server.Data.Entities.Product", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
