// <auto-generated />
using System;
using CrossplatformHW.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CrossplatformHW.Server.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230516214906_Seeding")]
    partial class Seeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CrossplatformHW.Server.Data.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e08829ac-71db-4982-86a9-b183e69b0e5a"),
                            Name = "Звичайний одяг",
                            Slug = "default-clothes"
                        },
                        new
                        {
                            Id = new Guid("ed5af860-c2f2-443a-9d05-b32bc0c67bc1"),
                            Name = "Верхній одяг",
                            Slug = "upper-clothes"
                        },
                        new
                        {
                            Id = new Guid("be1289c1-b911-467f-91d0-56fee40eee56"),
                            Name = "Вечірній одяг",
                            Slug = "evening-clothes"
                        },
                        new
                        {
                            Id = new Guid("58dceb53-774d-47d9-80ee-148a1fa89f8c"),
                            Name = "Спортивний одяг",
                            Slug = "sport-clothes"
                        },
                        new
                        {
                            Id = new Guid("3b4c8f18-6a42-4f3c-97ae-6e07e9749d49"),
                            Name = "Пляжний одяг",
                            Slug = "sand-clothes"
                        },
                        new
                        {
                            Id = new Guid("235c4883-0358-40a4-8d59-b3020a9e19d4"),
                            Name = "Бізнес одяг",
                            Slug = "business clothes"
                        });
                });

            modelBuilder.Entity("CrossplatformHW.Server.Data.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("CrossplatformHW.Server.Data.Entities.Joints.RolePermission", b =>
                {
                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("PermissionId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            PermissionId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            PermissionId = 1,
                            RoleId = 2
                        },
                        new
                        {
                            PermissionId = 2,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("CrossplatformHW.Server.Data.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "CustomerPermission"
                        },
                        new
                        {
                            Id = 2,
                            Name = "AdminPermission"
                        });
                });

            modelBuilder.Entity("CrossplatformHW.Server.Data.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6c8e0b64-2b72-43ef-acbe-5b1931141bb6"),
                            CategoryId = new Guid("e08829ac-71db-4982-86a9-b183e69b0e5a"),
                            Description = "Футболка",
                            ImageUrl = "https://static.athletics.kiev.ua/static/i/395_380/products/253314/22CpzFlU.jpeg",
                            Name = "Футболка",
                            Price = 5.99m,
                            Slug = "tshirt"
                        },
                        new
                        {
                            Id = new Guid("fea1da48-32b3-4569-b678-86884356fe03"),
                            CategoryId = new Guid("e08829ac-71db-4982-86a9-b183e69b0e5a"),
                            Description = "Джинси",
                            ImageUrl = "https://static.reserved.com/media/catalog/product/cache/1200/a4e40ebdc3e371adff845072e1c73f37/6/0/6048H-50J-010-1_13.jpg",
                            Name = "Джинси",
                            Price = 8.99m,
                            Slug = "jeans"
                        },
                        new
                        {
                            Id = new Guid("797d2da5-29ab-4fb0-a109-b92e4d5fba6e"),
                            CategoryId = new Guid("e08829ac-71db-4982-86a9-b183e69b0e5a"),
                            Description = "Сорочка",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSzFHH6zjvPiqtNNOQldZCzVS8XUNYxl-OnY7jqg1E&s",
                            Name = "Сорочка",
                            Price = 7m,
                            Slug = "shirt"
                        },
                        new
                        {
                            Id = new Guid("dbe1a199-3525-44d2-b515-6677242b3f61"),
                            CategoryId = new Guid("e08829ac-71db-4982-86a9-b183e69b0e5a"),
                            Description = "Спідниця",
                            ImageUrl = "https://content.rozetka.com.ua/goods/images/big/32645949.jpg",
                            Name = "Спідниця",
                            Price = 11.5m,
                            Slug = "skirt"
                        },
                        new
                        {
                            Id = new Guid("4c479cb6-0959-4e51-963a-d95d08df9985"),
                            CategoryId = new Guid("e08829ac-71db-4982-86a9-b183e69b0e5a"),
                            Description = "Світшот",
                            ImageUrl = "https://static.reserved.com/media/catalog/product/cache/1200/a4e40ebdc3e371adff845072e1c73f37/0/4/0401M-MLC-010-1_8.jpg",
                            Name = "Світшот",
                            Price = 16.49m,
                            Slug = "sweatshirt"
                        },
                        new
                        {
                            Id = new Guid("6a6d10e9-c3a6-4783-a3d5-a301f574d35f"),
                            CategoryId = new Guid("e08829ac-71db-4982-86a9-b183e69b0e5a"),
                            Description = "Шорти",
                            ImageUrl = "https://burdastyle.ua/sites/default/files/models/burdastyle_shorty_na_kulisci_119_6_2020.jpg",
                            Name = "Шорти",
                            Price = 6.99m,
                            Slug = "shorts"
                        },
                        new
                        {
                            Id = new Guid("903ff978-9b46-4663-9912-5db35459bedb"),
                            CategoryId = new Guid("ed5af860-c2f2-443a-9d05-b32bc0c67bc1"),
                            Description = "Куртка",
                            ImageUrl = "https://borec.in.ua/5463-medium_default/kurtka-manto-winter-jacket-alpha.jpg",
                            Name = "Куртка",
                            Price = 25.99m,
                            Slug = "jacket"
                        },
                        new
                        {
                            Id = new Guid("9440d8bf-2eb7-45b0-86af-736e66d5b4ee"),
                            CategoryId = new Guid("ed5af860-c2f2-443a-9d05-b32bc0c67bc1"),
                            Description = "Пальто",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQKTkDVuYPEshdgAbCOrhUGh-7Ey-eY-N9O3Q&usqp=CAU",
                            Name = "Пальто",
                            Price = 47.99m,
                            Slug = "coat"
                        },
                        new
                        {
                            Id = new Guid("d7ac905f-20ef-4e64-aa6b-79d7c68746b2"),
                            CategoryId = new Guid("be1289c1-b911-467f-91d0-56fee40eee56"),
                            Description = "Сукня",
                            ImageUrl = "https://foberini.com/image/cache/catalog/product/women/SS16/01067/01067%20site-cr-493x739.jpg",
                            Name = "Сукня",
                            Price = 33.29m,
                            Slug = "dress"
                        },
                        new
                        {
                            Id = new Guid("fb92320b-8482-4e06-84b6-04073818ab9a"),
                            CategoryId = new Guid("be1289c1-b911-467f-91d0-56fee40eee56"),
                            Description = "Смокінг",
                            ImageUrl = "https://images.prom.ua/1510914484_muzhskoj-smoking-west-fashion.jpg",
                            Name = "Смокінг",
                            Price = 87.99m,
                            Slug = "tuxedo"
                        },
                        new
                        {
                            Id = new Guid("fc990e54-c244-42c7-b274-cc85ab780c21"),
                            CategoryId = new Guid("58dceb53-774d-47d9-80ee-148a1fa89f8c"),
                            Description = "Спортивні штани",
                            ImageUrl = "https://unimarket.com.ua/wp-content/uploads/2020/02/DJ-9404.jpg",
                            Name = "Спортивні штани",
                            Price = 87.99m,
                            Slug = "sport-pants"
                        },
                        new
                        {
                            Id = new Guid("2cd7f405-ef1a-4705-ac2d-5a89526a3319"),
                            CategoryId = new Guid("58dceb53-774d-47d9-80ee-148a1fa89f8c"),
                            Description = "Бігові кросівки",
                            ImageUrl = "https://hadi.ua/image/cache/catalog/asics/10/1014A226-101-1024x1024.jpg",
                            Name = "Бігові кросівки",
                            Price = 34.99m,
                            Slug = "runners"
                        },
                        new
                        {
                            Id = new Guid("14ca04e2-58ef-4b3a-922b-74a4dc400743"),
                            CategoryId = new Guid("3b4c8f18-6a42-4f3c-97ae-6e07e9749d49"),
                            Description = "Купальник",
                            ImageUrl = "https://swimstore.by/assets/components/phpthumbof/cache/2a243-055-5.f93d8153e4bae606f1ec449a4d218fdc13.f93d8153e4bae606f1ec449a4d218fdc13.jpg",
                            Name = "Купальник",
                            Price = 17.99m,
                            Slug = "swimmer"
                        },
                        new
                        {
                            Id = new Guid("6e0ddc66-eff8-4b9b-a8e4-42632ade33f7"),
                            CategoryId = new Guid("3b4c8f18-6a42-4f3c-97ae-6e07e9749d49"),
                            Description = "Парео",
                            ImageUrl = "https://cdn.shopify.com/s/files/1/0067/6446/2144/files/Blog_pictures_f2560263-5922-434e-8e2b-15c46544661e_600x600.jpg?v=1649677525",
                            Name = "Парео",
                            Price = 33.24m,
                            Slug = "pareo"
                        },
                        new
                        {
                            Id = new Guid("0d57c36c-1707-4e7e-9927-98d552188fdb"),
                            CategoryId = new Guid("235c4883-0358-40a4-8d59-b3020a9e19d4"),
                            Description = "Краватка",
                            ImageUrl = "https://cdn.lbtq.io/productImage/resize/300x400_40cd750bba9870f18aada2478b24840a/20210810/160/20210810160317_005841155_1.jpg",
                            Name = "Краватка",
                            Price = 13.24m,
                            Slug = "tie"
                        },
                        new
                        {
                            Id = new Guid("d3638f75-bd86-4e1b-a1d7-ab7bf0b95237"),
                            CategoryId = new Guid("235c4883-0358-40a4-8d59-b3020a9e19d4"),
                            Description = "Сорочка з манжетами",
                            ImageUrl = "https://soro4ka.com.ua/image/cache/catalog/Products/Sorochku/Astron/138692320238/138692320238-1-1000x1000.jpg",
                            Name = "Сорочка з манжетами",
                            Price = 26.67m,
                            Slug = "cuffs"
                        });
                });

            modelBuilder.Entity("CrossplatformHW.Server.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Customer"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("CrossplatformHW.Server.Data.Entities.Security", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ConfirmationCodeExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConfirmationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ConfirmationTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewEmailConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Securities");
                });

            modelBuilder.Entity("CrossplatformHW.Server.Data.Entities.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("CrossplatformHW.Server.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTfaEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CrossplatformHW.Server.Data.Entities.Comment", b =>
                {
                    b.HasOne("CrossplatformHW.Server.Data.Entities.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrossplatformHW.Server.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CrossplatformHW.Server.Data.Entities.Joints.RolePermission", b =>
                {
                    b.HasOne("CrossplatformHW.Server.Data.Entities.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrossplatformHW.Server.Data.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CrossplatformHW.Server.Data.Entities.Product", b =>
                {
                    b.HasOne("CrossplatformHW.Server.Data.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CrossplatformHW.Server.Data.Entities.Security", b =>
                {
                    b.HasOne("CrossplatformHW.Server.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CrossplatformHW.Server.Data.Entities.Session", b =>
                {
                    b.HasOne("CrossplatformHW.Server.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CrossplatformHW.Server.Data.Entities.User", b =>
                {
                    b.HasOne("CrossplatformHW.Server.Data.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CrossplatformHW.Server.Data.Entities.Product", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
